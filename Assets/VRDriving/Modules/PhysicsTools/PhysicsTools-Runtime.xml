<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PhysicsTools-Runtime</name>
    </assembly>
    <members>
        <member name="T:PhysicsTools.Collisions.CollisionIgnorer">
            <summary>
            A simple class that allows provides the neccesary methods and helpers to temporarily ignore collisions between a set of Colliders and a Collider.
            </summary>
            Author: Mathew Aloisio
        </member>
        <member name="T:PhysicsTools.Collisions.CollisionIgnorer.Entry">
            <summary>An entry for a temporarily ignore collision rule.</summary>
        </member>
        <member name="F:PhysicsTools.Collisions.CollisionIgnorer.Entry.collider">
            <summary>The Collider associated with the entry.</summary>
        </member>
        <member name="F:PhysicsTools.Collisions.CollisionIgnorer.Entry.expireTime">
            <summary>The time the entry is set to expire.</summary>
        </member>
        <member name="F:PhysicsTools.Collisions.CollisionIgnorer.m_Colliders">
            <summary>The list of colliders that are being managed by this class instance.</summary>
        </member>
        <member name="F:PhysicsTools.Collisions.CollisionIgnorer.m_TempIgnoredCollisions">
            <summary>A list of collision temporarily ignored by this component.</summary>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.#ctor(System.Collections.Generic.List{UnityEngine.Collider})">
            <summary>Creates a CollisionIgnorer that provides easy methods for temporarily ignoring collisions between a collider and pColliders.</summary>
            <param name="pColliders">A List of colliders whose collision with other colliders is being cnotrolled by this class instance.</param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.Update">
            <summary>Updates the collision ignorer allowing it to timeout any temporarily ignored collisions.</summary>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.IgnoreCollider(UnityEngine.Collider)">
            <summary>Ignore collisions between all colliders associated with this component and pCollider indefinitely.</summary>
            <param name="pCollider"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.IgnoreColliders(System.Collections.Generic.IEnumerable{UnityEngine.Collider})">
            <summary>Ignore collisions between all colliders associated with this component and all colliders in the pColliders enumerable indefinitely.</summary>
            <param name="pColliders"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.IgnoreColliderFor(UnityEngine.Collider,System.Single)">
            <summary>Ignores collisions between all colliders associated with this component and pCollider for pSeconds.</summary>
            <param name="pCollider"></param>
            <param name="pSeconds"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreColliderIn(UnityEngine.Collider,System.Single)">
            <summary>Unignores collisions between all colliders associated with this component and pCollider in pSeconds.</summary>
            <param name="pCollider"></param>
            <param name="pSeconds"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreCollider(UnityEngine.Collider)">
            <summary>Unignores collisions between all colliders associated with this component and pCollider.</summary>
            <param name="pCollider"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreColliders(System.Collections.Generic.IEnumerable{UnityEngine.Collider})">
            <summary>Unignores collisions between all colliders associated with this component and all pColliders in the enumerable.</summary>
            <param name="pColliders"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreEntry(PhysicsTools.Collisions.CollisionIgnorer.Entry)">
            <summary>Undoes the collision ignore entry.</summary>
            <param name="pEntry"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreIndex(System.Int32)">
            <summary>Undoes the ignore collision registered in entry index pIndex.</summary>
            <param name="pIndex"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreAll">
            <summary>Undo all temporarily ignored collisions.</summary>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.SetIgnoreCollisions(UnityEngine.Collider,System.Boolean)">
            <summary>Directly controls invokations to Phyiscs.IgnoreCollisions.</summary>
            <param name="pCollider"></param>
            <param name="pIgnore"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.RegisterTempIgnoredCollider(UnityEngine.Collider,System.Single)">
            <summary>Registers a temporarily ignored collider that will be unignored in pSeconds.</summary>
            <param name="pCollider"></param>
            <param name="pSeconds"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.IgnoreRigidbody(UnityEngine.Rigidbody)">
            <summary>Ignores collisions between all colliders associated with this component and the Rigidbody, pRigidbody, indefinitely.</summary>
            <param name="pRigidbody"></param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.IgnoreRigidbodyFor(UnityEngine.Rigidbody,System.Single)">
            <summary>Ignores collisions between all colliders associated with this component and the Rigidbody, pRigidbody, for pSeconds.</summary>
            <param name="pRigidbody"></param>
            <param name="pSeconds">The number of seconds to ignore collisions for.</param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreRigidbodyIn(UnityEngine.Rigidbody,System.Single)">
            <summary>Unignores collisions between all colliders associated with this component and the Rigidbody, pRigidbody, in pSeconds.</summary>
            <param name="pRigidbody"></param>
            <param name="pSeconds">The number of seconds to unignore collisions in.</param>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionIgnorer.UnignoreRigidbody(UnityEngine.Rigidbody)">
            <summary>Unggnores collisions between all colliders associated with this component and the Rigidbody, pRigidbody.</summary>
            <param name="pRigidbody"></param>
        </member>
        <member name="T:PhysicsTools.Collisions.CollisionTracker">
            <summary>
            A simple component that keeps track of collisions using OnCollisionEnter and OnCollisionExit.
            </summary>
            Author: Mathew Aloisio
        </member>
        <member name="P:PhysicsTools.Collisions.CollisionTracker.CollidingWithCount">
            <summary>Returns the number of Colliders currently colliding with the relevant Rigidbody.</summary>
        </member>
        <member name="F:PhysicsTools.Collisions.CollisionTracker.m_CollidingWith">
            <summary>A list of Colliders that are colliding with the relevant Rigidbody.</summary>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionTracker.IsCollidingWith(UnityEngine.Collider)">
            <summary>Returns true when the tracker is tracking a collision with the specified collider, pCollider, otherwise false.</summary>
            <param name="pCollider"></param>
            <returns></returns>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionTracker.IsCollidingWith(UnityEngine.Rigidbody,System.Boolean)">
            <summary>Returns true if the tracker is colliding with any colliders of pRigidbody, otherwise false.</summary>
            <param name="pRigidbody"></param>
            <param name="pAllowNestedRigidbodies">Should nested Rigidbody colliders be included?</param>
            <returns>true if the tracker is colliding with any colliders of pRigidbody, otherwise false.</returns>
        </member>
        <member name="M:PhysicsTools.Collisions.CollisionTracker.GetCollidingWith(System.Int32)">
            <summary>Returns the Collider in the given 'colliding with' index.</summary>
            <param name="pIndex"></param>
            <returns>The collider in the given 'colliding with' index.</returns>
        </member>
        <member name="T:PhysicsTools.Transformations.TransformVelocityTracker">
            <summary>
            A simple component that tracks velocity and angular velocity for a Transform that it is attached to.
            </summary>
            Author: Mathew Aloisio
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.PositionLastFrame">
            <summary>The position of the Grabber's transform last frame.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.RotationLastFrame">
            <summary>The rotation of the Grabber's transform last frame.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.AverageVelocity">
            <summary>Returns the average velocity of the Transform in units per second over the last moveSampleTime seconds.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.AverageVelocityEntries">
            <summary>Returns the number of velocity entries used in the last 'AverageVelocity' calculation.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.VelocityLastFrame">
            <summary>The velocity in units per second last frame.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.AverageRotationVelocity">
            <summary>Returns the average rotation velocity of the Transform in units per second over the last rotateSampleTime seconds.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.AverageRotationVelocityEntries">
            <summary>Returns the number of rotation velocity entries used in the last 'AverageRotationVelocity' calculation.</summary>
        </member>
        <member name="P:PhysicsTools.Transformations.TransformVelocityTracker.RotationVelocityLastFrame">
            <summary>The rotational velocity last frame represented as a Quaternion.</summary>
        </member>
        <member name="F:PhysicsTools.Transformations.TransformVelocityTracker.m_Velocities">
            <summary>A list of VelocityTimePairs that are used to calculate average velocity.</summary>
        </member>
        <member name="F:PhysicsTools.Transformations.TransformVelocityTracker.m_RotationVelocities">
            <summary>A list of RotationVelocityTimePairs that are used to calculate average rotation velocity.</summary>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.ClearData">
            <summary>Clears both velocity and angular velocity data.</summary>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.ClearVelocityData">
            <summary>Clears all velocity data.</summary>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.ClearAngularVelocityData">
            <summary>Clears all angular velocity data.</summary>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.SetSampleVelocityEnabled(System.Boolean)">
            <summary>Sets the 'sampleVelocity' field of this component. Useful for use with Unity editor events.</summary>
            <param name="pEnabled"></param>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.SetSampleRotationVelocityEnabled(System.Boolean)">
            <summary>Sets the 'sampleRotationVelocity' field of this component. Useful for use with Unity editor events.</summary>
            <param name="pEnabled"></param>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.SetMoveSampleTime(System.Single)">
            <summary>Sets the 'moveSampleTime' field of this component. Useful for use with Unity editor events.</summary>
            <param name="pTime"></param>
        </member>
        <member name="M:PhysicsTools.Transformations.TransformVelocityTracker.SetRotateSampleTime(System.Single)">
            <summary>Sets the 'rotateSampleTime' field of this component. Useful for use with Unity editor events.</summary>
            <param name="pTime"></param>
        </member>
        <member name="T:PhysicsTools.Utility.RigidbodyUtility">
            <summary>
            A public static class that provides useful Rigidbody utilities.
            </summary>
            Author: Mathew Aloisio
        </member>
        <member name="M:PhysicsTools.Utility.RigidbodyUtility.IsColliderPartOfRigidbody(UnityEngine.Rigidbody,UnityEngine.Collider,System.Boolean)">
            <summary>Returns true if the specified collider, pCollider, is part of the specified Rigidbody, pRigidbody, otherwise false.</summary>
            <param name="pRigidbody"></param>
            <param name="pCollider"></param>
            <param name="pAllowNestedRigidbodies">Should nested Rigidbody colliders be included?</param>
            <returns>true if the specified collider, pCollider, is part of the specified Rigidbody, pRigidbody, otherwise false.</returns>
        </member>
        <member name="M:PhysicsTools.Utility.RigidbodyUtility.GetCollidersOfRigidbody(UnityEngine.Rigidbody,System.Boolean)">
            <summary>Returns a List of Colliders that are part of the specified Rigidbody, pRigidbody.</summary>
            <param name="pRigidbody"></param>
            <param name="pAllowNestedRigidbodies">Should nested Rigidbody colliders be included?</param>
            <returns>A List of Colliders that are part of the specified Rigidbody, pRigidbody.</returns>
        </member>
        <member name="M:PhysicsTools.Utility.RigidbodyUtility.RecursiveIsColliderPartOfRigidbody(UnityEngine.Transform,UnityEngine.Collider,System.Boolean,System.Boolean@)">
            <summary>Recursively checks if a collider is part of a Transform using Rigidbodies as delimiters if pAllowNestedRigidbodies is false.</summary>
            <param name="pTransform"></param>
            <param name="pCollider"></param>
            <param name="pAllowNestedRigidbodies">Should nested Rigidbody colliders be included?</param>
            <param name="pResult"></param>
        </member>
        <member name="M:PhysicsTools.Utility.RigidbodyUtility.RecursiveGetCollidersOfRigidbody(UnityEngine.Transform,System.Collections.Generic.List{UnityEngine.Collider},System.Boolean)">
            <summary>Recursively gets a List of Colliders that are part of a Transform using Rigidbodies as delimiters if pAllowNestedRigidbodies is false.</summary>
            <param name="pTransform"></param>
            <param name="pColliders"></param>
            <param name="pAllowNestedRigidbodies">Should nested Rigidbody colliders be included?</param>
        </member>
    </members>
</doc>
